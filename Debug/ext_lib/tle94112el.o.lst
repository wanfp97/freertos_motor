   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "tle94112el.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.get_pwm_channel_dc_address,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	get_pwm_channel_dc_address:
  25              	.LFB0:
  26              	 .file 1 "../ext_lib/tle94112el.c"
   1:../ext_lib/tle94112el.c **** /**************************************************************************************************
   2:../ext_lib/tle94112el.c ****  * Copyright (c) 2018-2020, Infineon Technologies AG
   3:../ext_lib/tle94112el.c ****  * All rights reserved.
   4:../ext_lib/tle94112el.c ****  *
   5:../ext_lib/tle94112el.c ****  * Boost Software License - Version 1.0 - August 17th, 2003
   6:../ext_lib/tle94112el.c ****  *
   7:../ext_lib/tle94112el.c ****  * Permission is hereby granted, free of charge, to any person or organization
   8:../ext_lib/tle94112el.c ****  * obtaining a copy of the software and accompanying documentation covered by
   9:../ext_lib/tle94112el.c ****  * this license (the "Software") to use, reproduce, display, distribute,
  10:../ext_lib/tle94112el.c ****  * execute, and transmit the Software, and to prepare derivative works of the
  11:../ext_lib/tle94112el.c ****  * Software, and to permit third-parties to whom the Software is furnished to
  12:../ext_lib/tle94112el.c ****  * do so, all subject to the following:
  13:../ext_lib/tle94112el.c ****  *
  14:../ext_lib/tle94112el.c ****  * The copyright notices in the Software and this entire statement, including
  15:../ext_lib/tle94112el.c ****  * the above license grant, this restriction and the following disclaimer,
  16:../ext_lib/tle94112el.c ****  * must be included in all copies of the Software, in whole or in part, and
  17:../ext_lib/tle94112el.c ****  * all derivative works of the Software, unless such copies or derivative
  18:../ext_lib/tle94112el.c ****  * works are solely in the form of machine-executable object code generated by
  19:../ext_lib/tle94112el.c ****  * a source language processor.
  20:../ext_lib/tle94112el.c ****  *
  21:../ext_lib/tle94112el.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  22:../ext_lib/tle94112el.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  23:../ext_lib/tle94112el.c ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  24:../ext_lib/tle94112el.c ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  25:../ext_lib/tle94112el.c ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  26:../ext_lib/tle94112el.c ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  27:../ext_lib/tle94112el.c ****  * DEALINGS IN THE SOFTWARE.
  28:../ext_lib/tle94112el.c ****  *
  29:../ext_lib/tle94112el.c ****  * To improve the quality of the software, users are encouraged to share
  30:../ext_lib/tle94112el.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  31:../ext_lib/tle94112el.c ****  * at XMCSupport@infineon.com.
  32:../ext_lib/tle94112el.c ****  **************************************************************************************************
  33:../ext_lib/tle94112el.c **** 
  34:../ext_lib/tle94112el.c **** #include "tle94112el.h"
  35:../ext_lib/tle94112el.c **** 
  36:../ext_lib/tle94112el.c **** #define TLE94112EL_SPI_WRITE        0x80
  37:../ext_lib/tle94112el.c **** #define TLE94112EL_SPI_CLEAR        0x80
  38:../ext_lib/tle94112el.c **** 
  39:../ext_lib/tle94112el.c **** #define TLE94112EL_PWM_CH_FREQ_CTRL_PWM_CH_FREQ_Msk		TLE94112EL_PWM_CH_FREQ_CTRL_PWM_CH1_FREQ_Msk
  40:../ext_lib/tle94112el.c **** #define TLE94112EL_PWM_CH_FREQ_CTRL_PWM_CH_FREQ_Size    (TLE94112EL_PWM_CH_FREQ_CTRL_PWM_CH2_FREQ_P
  41:../ext_lib/tle94112el.c **** #define TLE94112EL_HB_MODE_CTRL_HB_MODE_Msk  			TLE94112EL_HB_MODE_1_CTRL_HB1_MODE_Msk
  42:../ext_lib/tle94112el.c **** #define TLE94112EL_HB_MODE_CTRL_HB_MODE_Size 			(TLE94112EL_HB_MODE_1_CTRL_HB2_MODE_Pos - TLE94112E
  43:../ext_lib/tle94112el.c **** #define TLE94112EL_HB_ACT_CTRL_HB_Msk                   (TLE94112EL_HB_ACT_1_CTRL_HB1_HS_EN_Msk | T
  44:../ext_lib/tle94112el.c **** #define TLE94112EL_HB_ACT_CTRL_HB_Size                  (TLE94112EL_HB_ACT_1_CTRL_HB2_LS_EN_Pos - T
  45:../ext_lib/tle94112el.c **** 
  46:../ext_lib/tle94112el.c **** static inline uint8_t get_pwm_channel_dc_address(uint8_t channel)
  47:../ext_lib/tle94112el.c **** {
  27              	 .loc 1 47 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 0346     	 mov r3,r0
  43 0008 FB71     	 strb r3,[r7,#7]
  48:../ext_lib/tle94112el.c ****   switch (channel)
  44              	 .loc 1 48 0
  45 000a FB79     	 ldrb r3,[r7,#7]
  46 000c 012B     	 cmp r3,#1
  47 000e 05D0     	 beq .L3
  48 0010 022B     	 cmp r3,#2
  49 0012 05D0     	 beq .L4
  50 0014 002B     	 cmp r3,#0
  51 0016 05D1     	 bne .L7
  49:../ext_lib/tle94112el.c ****   {
  50:../ext_lib/tle94112el.c ****     case TLE94112EL_PWM_CHANNEL_1:
  51:../ext_lib/tle94112el.c ****       return TLE94112EL_PWM1_DC_CTRL;
  52              	 .loc 1 51 0
  53 0018 7323     	 movs r3,#115
  54 001a 04E0     	 b .L6
  55              	.L3:
  52:../ext_lib/tle94112el.c **** 
  53:../ext_lib/tle94112el.c ****     case TLE94112EL_PWM_CHANNEL_2:
  54:../ext_lib/tle94112el.c ****       return TLE94112EL_PWM2_DC_CTRL;
  56              	 .loc 1 54 0
  57 001c 0B23     	 movs r3,#11
  58 001e 02E0     	 b .L6
  59              	.L4:
  55:../ext_lib/tle94112el.c **** 
  56:../ext_lib/tle94112el.c ****     case TLE94112EL_PWM_CHANNEL_3:
  57:../ext_lib/tle94112el.c ****       return TLE94112EL_PWM3_DC_CTRL;
  60              	 .loc 1 57 0
  61 0020 4B23     	 movs r3,#75
  62 0022 00E0     	 b .L6
  63              	.L7:
  58:../ext_lib/tle94112el.c **** 
  59:../ext_lib/tle94112el.c ****     default:
  60:../ext_lib/tle94112el.c ****       return 0xff;
  64              	 .loc 1 60 0
  65 0024 FF23     	 movs r3,#255
  66              	.L6:
  61:../ext_lib/tle94112el.c ****   }
  62:../ext_lib/tle94112el.c **** }
  67              	 .loc 1 62 0
  68 0026 1846     	 mov r0,r3
  69 0028 0C37     	 adds r7,r7,#12
  70              	.LCFI3:
  71              	 .cfi_def_cfa_offset 4
  72 002a BD46     	 mov sp,r7
  73              	.LCFI4:
  74              	 .cfi_def_cfa_register 13
  75              	 
  76 002c 5DF8047B 	 ldr r7,[sp],#4
  77              	.LCFI5:
  78              	 .cfi_restore 7
  79              	 .cfi_def_cfa_offset 0
  80 0030 7047     	 bx lr
  81              	 .cfi_endproc
  82              	.LFE0:
  84 0032 00BF     	 .section .text.get_hbridge_mode_address,"ax",%progbits
  85              	 .align 2
  86              	 .thumb
  87              	 .thumb_func
  89              	get_hbridge_mode_address:
  90              	.LFB1:
  63:../ext_lib/tle94112el.c **** 
  64:../ext_lib/tle94112el.c **** static inline uint8_t get_hbridge_mode_address(uint8_t hbridge)
  65:../ext_lib/tle94112el.c **** {
  91              	 .loc 1 65 0
  92              	 .cfi_startproc
  93              	 
  94              	 
  95              	 
  96 0000 80B4     	 push {r7}
  97              	.LCFI6:
  98              	 .cfi_def_cfa_offset 4
  99              	 .cfi_offset 7,-4
 100 0002 83B0     	 sub sp,sp,#12
 101              	.LCFI7:
 102              	 .cfi_def_cfa_offset 16
 103 0004 00AF     	 add r7,sp,#0
 104              	.LCFI8:
 105              	 .cfi_def_cfa_register 7
 106 0006 0346     	 mov r3,r0
 107 0008 FB71     	 strb r3,[r7,#7]
  66:../ext_lib/tle94112el.c ****   if (hbridge < TLE94112EL_HBRIDGE_5)
 108              	 .loc 1 66 0
 109 000a FB79     	 ldrb r3,[r7,#7]
 110 000c 032B     	 cmp r3,#3
 111 000e 01D8     	 bhi .L9
  67:../ext_lib/tle94112el.c ****   {
  68:../ext_lib/tle94112el.c ****     return TLE94112EL_HB_MODE_1_CTRL;
 112              	 .loc 1 68 0
 113 0010 6323     	 movs r3,#99
 114 0012 0AE0     	 b .L10
 115              	.L9:
  69:../ext_lib/tle94112el.c ****   }
  70:../ext_lib/tle94112el.c ****   else if (hbridge < TLE94112EL_HBRIDGE_9)
 116              	 .loc 1 70 0
 117 0014 FB79     	 ldrb r3,[r7,#7]
 118 0016 072B     	 cmp r3,#7
 119 0018 01D8     	 bhi .L11
  71:../ext_lib/tle94112el.c ****   {
  72:../ext_lib/tle94112el.c ****     return TLE94112EL_HB_MODE_2_CTRL;
 120              	 .loc 1 72 0
 121 001a 1323     	 movs r3,#19
 122 001c 05E0     	 b .L10
 123              	.L11:
  73:../ext_lib/tle94112el.c ****   }
  74:../ext_lib/tle94112el.c ****   else if (hbridge < TLE94112EL_HBRIDGE_MAX)
 124              	 .loc 1 74 0
 125 001e FB79     	 ldrb r3,[r7,#7]
 126 0020 0B2B     	 cmp r3,#11
 127 0022 01D8     	 bhi .L12
  75:../ext_lib/tle94112el.c ****   {
  76:../ext_lib/tle94112el.c ****     return TLE94112EL_HB_MODE_3_CTRL;
 128              	 .loc 1 76 0
 129 0024 5323     	 movs r3,#83
 130 0026 00E0     	 b .L10
 131              	.L12:
  77:../ext_lib/tle94112el.c ****   }
  78:../ext_lib/tle94112el.c ****   else
  79:../ext_lib/tle94112el.c ****   {
  80:../ext_lib/tle94112el.c ****     return 0xff;
 132              	 .loc 1 80 0
 133 0028 FF23     	 movs r3,#255
 134              	.L10:
  81:../ext_lib/tle94112el.c ****   }
  82:../ext_lib/tle94112el.c **** }
 135              	 .loc 1 82 0
 136 002a 1846     	 mov r0,r3
 137 002c 0C37     	 adds r7,r7,#12
 138              	.LCFI9:
 139              	 .cfi_def_cfa_offset 4
 140 002e BD46     	 mov sp,r7
 141              	.LCFI10:
 142              	 .cfi_def_cfa_register 13
 143              	 
 144 0030 5DF8047B 	 ldr r7,[sp],#4
 145              	.LCFI11:
 146              	 .cfi_restore 7
 147              	 .cfi_def_cfa_offset 0
 148 0034 7047     	 bx lr
 149              	 .cfi_endproc
 150              	.LFE1:
 152              	 .section .text.get_hbridge_fw_address,"ax",%progbits
 153              	 .align 2
 154              	 .thumb
 155              	 .thumb_func
 157              	get_hbridge_fw_address:
 158              	.LFB2:
  83:../ext_lib/tle94112el.c **** 
  84:../ext_lib/tle94112el.c **** static inline uint8_t get_hbridge_fw_address(uint8_t hbridge)
  85:../ext_lib/tle94112el.c **** {
 159              	 .loc 1 85 0
 160              	 .cfi_startproc
 161              	 
 162              	 
 163              	 
 164 0000 80B4     	 push {r7}
 165              	.LCFI12:
 166              	 .cfi_def_cfa_offset 4
 167              	 .cfi_offset 7,-4
 168 0002 83B0     	 sub sp,sp,#12
 169              	.LCFI13:
 170              	 .cfi_def_cfa_offset 16
 171 0004 00AF     	 add r7,sp,#0
 172              	.LCFI14:
 173              	 .cfi_def_cfa_register 7
 174 0006 0346     	 mov r3,r0
 175 0008 FB71     	 strb r3,[r7,#7]
  86:../ext_lib/tle94112el.c ****   if (hbridge < TLE94112EL_HBRIDGE_7)
 176              	 .loc 1 86 0
 177 000a FB79     	 ldrb r3,[r7,#7]
 178 000c 052B     	 cmp r3,#5
 179 000e 01D8     	 bhi .L14
  87:../ext_lib/tle94112el.c ****   {
  88:../ext_lib/tle94112el.c ****     return TLE94112EL_FW_OL_CTRL;
 180              	 .loc 1 88 0
 181 0010 2B23     	 movs r3,#43
 182 0012 05E0     	 b .L15
 183              	.L14:
  89:../ext_lib/tle94112el.c ****   }
  90:../ext_lib/tle94112el.c ****   else if (hbridge < TLE94112EL_HBRIDGE_MAX)
 184              	 .loc 1 90 0
 185 0014 FB79     	 ldrb r3,[r7,#7]
 186 0016 0B2B     	 cmp r3,#11
 187 0018 01D8     	 bhi .L16
  91:../ext_lib/tle94112el.c ****   {
  92:../ext_lib/tle94112el.c ****     return TLE94112EL_FW_CTRL;
 188              	 .loc 1 92 0
 189 001a 6B23     	 movs r3,#107
 190 001c 00E0     	 b .L15
 191              	.L16:
  93:../ext_lib/tle94112el.c ****   }
  94:../ext_lib/tle94112el.c ****   else
  95:../ext_lib/tle94112el.c ****   {
  96:../ext_lib/tle94112el.c ****     return 0xff;
 192              	 .loc 1 96 0
 193 001e FF23     	 movs r3,#255
 194              	.L15:
  97:../ext_lib/tle94112el.c ****   }
  98:../ext_lib/tle94112el.c **** }
 195              	 .loc 1 98 0
 196 0020 1846     	 mov r0,r3
 197 0022 0C37     	 adds r7,r7,#12
 198              	.LCFI15:
 199              	 .cfi_def_cfa_offset 4
 200 0024 BD46     	 mov sp,r7
 201              	.LCFI16:
 202              	 .cfi_def_cfa_register 13
 203              	 
 204 0026 5DF8047B 	 ldr r7,[sp],#4
 205              	.LCFI17:
 206              	 .cfi_restore 7
 207              	 .cfi_def_cfa_offset 0
 208 002a 7047     	 bx lr
 209              	 .cfi_endproc
 210              	.LFE2:
 212              	 .section .text.get_hbridge_act_address,"ax",%progbits
 213              	 .align 2
 214              	 .thumb
 215              	 .thumb_func
 217              	get_hbridge_act_address:
 218              	.LFB3:
  99:../ext_lib/tle94112el.c **** 
 100:../ext_lib/tle94112el.c **** static inline uint8_t get_hbridge_act_address(uint8_t hbridge)
 101:../ext_lib/tle94112el.c **** {
 219              	 .loc 1 101 0
 220              	 .cfi_startproc
 221              	 
 222              	 
 223              	 
 224 0000 80B4     	 push {r7}
 225              	.LCFI18:
 226              	 .cfi_def_cfa_offset 4
 227              	 .cfi_offset 7,-4
 228 0002 83B0     	 sub sp,sp,#12
 229              	.LCFI19:
 230              	 .cfi_def_cfa_offset 16
 231 0004 00AF     	 add r7,sp,#0
 232              	.LCFI20:
 233              	 .cfi_def_cfa_register 7
 234 0006 0346     	 mov r3,r0
 235 0008 FB71     	 strb r3,[r7,#7]
 102:../ext_lib/tle94112el.c ****   if (hbridge < TLE94112EL_HBRIDGE_5)
 236              	 .loc 1 102 0
 237 000a FB79     	 ldrb r3,[r7,#7]
 238 000c 032B     	 cmp r3,#3
 239 000e 01D8     	 bhi .L18
 103:../ext_lib/tle94112el.c ****   {
 104:../ext_lib/tle94112el.c ****     return TLE94112EL_HB_ACT_1_CTRL;
 240              	 .loc 1 104 0
 241 0010 0323     	 movs r3,#3
 242 0012 0AE0     	 b .L19
 243              	.L18:
 105:../ext_lib/tle94112el.c ****   }
 106:../ext_lib/tle94112el.c ****   else if (hbridge < TLE94112EL_HBRIDGE_9)
 244              	 .loc 1 106 0
 245 0014 FB79     	 ldrb r3,[r7,#7]
 246 0016 072B     	 cmp r3,#7
 247 0018 01D8     	 bhi .L20
 107:../ext_lib/tle94112el.c ****   {
 108:../ext_lib/tle94112el.c ****     return TLE94112EL_HB_ACT_2_CTRL;
 248              	 .loc 1 108 0
 249 001a 4323     	 movs r3,#67
 250 001c 05E0     	 b .L19
 251              	.L20:
 109:../ext_lib/tle94112el.c ****   }
 110:../ext_lib/tle94112el.c ****   else if (hbridge < TLE94112EL_HBRIDGE_MAX)
 252              	 .loc 1 110 0
 253 001e FB79     	 ldrb r3,[r7,#7]
 254 0020 0B2B     	 cmp r3,#11
 255 0022 01D8     	 bhi .L21
 111:../ext_lib/tle94112el.c ****   {
 112:../ext_lib/tle94112el.c ****     return TLE94112EL_HB_ACT_3_CTRL;
 256              	 .loc 1 112 0
 257 0024 2323     	 movs r3,#35
 258 0026 00E0     	 b .L19
 259              	.L21:
 113:../ext_lib/tle94112el.c ****   }
 114:../ext_lib/tle94112el.c ****   else
 115:../ext_lib/tle94112el.c ****   {
 116:../ext_lib/tle94112el.c ****     return 0xff;
 260              	 .loc 1 116 0
 261 0028 FF23     	 movs r3,#255
 262              	.L19:
 117:../ext_lib/tle94112el.c ****   }
 118:../ext_lib/tle94112el.c **** }
 263              	 .loc 1 118 0
 264 002a 1846     	 mov r0,r3
 265 002c 0C37     	 adds r7,r7,#12
 266              	.LCFI21:
 267              	 .cfi_def_cfa_offset 4
 268 002e BD46     	 mov sp,r7
 269              	.LCFI22:
 270              	 .cfi_def_cfa_register 13
 271              	 
 272 0030 5DF8047B 	 ldr r7,[sp],#4
 273              	.LCFI23:
 274              	 .cfi_restore 7
 275              	 .cfi_def_cfa_offset 0
 276 0034 7047     	 bx lr
 277              	 .cfi_endproc
 278              	.LFE3:
 280              	 .section .text.is_valid_diag_reg,"ax",%progbits
 281              	 .align 2
 282              	 .thumb
 283              	 .thumb_func
 285              	is_valid_diag_reg:
 286              	.LFB4:
 119:../ext_lib/tle94112el.c **** 
 120:../ext_lib/tle94112el.c **** static inline bool is_valid_diag_reg(uint8_t addr)
 121:../ext_lib/tle94112el.c **** {
 287              	 .loc 1 121 0
 288              	 .cfi_startproc
 289              	 
 290              	 
 291              	 
 292 0000 80B4     	 push {r7}
 293              	.LCFI24:
 294              	 .cfi_def_cfa_offset 4
 295              	 .cfi_offset 7,-4
 296 0002 83B0     	 sub sp,sp,#12
 297              	.LCFI25:
 298              	 .cfi_def_cfa_offset 16
 299 0004 00AF     	 add r7,sp,#0
 300              	.LCFI26:
 301              	 .cfi_def_cfa_register 7
 302 0006 0346     	 mov r3,r0
 303 0008 FB71     	 strb r3,[r7,#7]
 122:../ext_lib/tle94112el.c ****   return ((addr == TLE94112EL_SYS_DIAG1) || (addr == TLE94112EL_SYS_DIAG2) ||
 123:../ext_lib/tle94112el.c **** 		  (addr == TLE94112EL_SYS_DIAG2) || (addr == TLE94112EL_SYS_DIAG3) ||
 124:../ext_lib/tle94112el.c **** 		  (addr == TLE94112EL_SYS_DIAG4) || (addr == TLE94112EL_SYS_DIAG5) ||
 125:../ext_lib/tle94112el.c **** 		  (addr == TLE94112EL_SYS_DIAG6) || (addr == TLE94112EL_SYS_DIAG7));
 304              	 .loc 1 125 0
 305 000a FB79     	 ldrb r3,[r7,#7]
 306 000c 1B2B     	 cmp r3,#27
 307 000e 14D0     	 beq .L23
 122:../ext_lib/tle94112el.c ****   return ((addr == TLE94112EL_SYS_DIAG1) || (addr == TLE94112EL_SYS_DIAG2) ||
 308              	 .loc 1 122 0
 309 0010 FB79     	 ldrb r3,[r7,#7]
 310 0012 5B2B     	 cmp r3,#91
 311 0014 11D0     	 beq .L23
 122:../ext_lib/tle94112el.c ****   return ((addr == TLE94112EL_SYS_DIAG1) || (addr == TLE94112EL_SYS_DIAG2) ||
 312              	 .loc 1 122 0 is_stmt 0 discriminator 1
 313 0016 FB79     	 ldrb r3,[r7,#7]
 314 0018 5B2B     	 cmp r3,#91
 315 001a 0ED0     	 beq .L23
 123:../ext_lib/tle94112el.c **** 		  (addr == TLE94112EL_SYS_DIAG4) || (addr == TLE94112EL_SYS_DIAG5) ||
 316              	 .loc 1 123 0 is_stmt 1
 317 001c FB79     	 ldrb r3,[r7,#7]
 318 001e 3B2B     	 cmp r3,#59
 319 0020 0BD0     	 beq .L23
 123:../ext_lib/tle94112el.c **** 		  (addr == TLE94112EL_SYS_DIAG4) || (addr == TLE94112EL_SYS_DIAG5) ||
 320              	 .loc 1 123 0 is_stmt 0 discriminator 1
 321 0022 FB79     	 ldrb r3,[r7,#7]
 322 0024 7B2B     	 cmp r3,#123
 323 0026 08D0     	 beq .L23
 124:../ext_lib/tle94112el.c **** 		  (addr == TLE94112EL_SYS_DIAG6) || (addr == TLE94112EL_SYS_DIAG7));
 324              	 .loc 1 124 0 is_stmt 1
 325 0028 FB79     	 ldrb r3,[r7,#7]
 326 002a 072B     	 cmp r3,#7
 327 002c 05D0     	 beq .L23
 124:../ext_lib/tle94112el.c **** 		  (addr == TLE94112EL_SYS_DIAG6) || (addr == TLE94112EL_SYS_DIAG7));
 328              	 .loc 1 124 0 is_stmt 0 discriminator 1
 329 002e FB79     	 ldrb r3,[r7,#7]
 330 0030 472B     	 cmp r3,#71
 331 0032 02D0     	 beq .L23
 332              	 .loc 1 125 0 is_stmt 1 discriminator 2
 333 0034 FB79     	 ldrb r3,[r7,#7]
 334 0036 272B     	 cmp r3,#39
 335 0038 01D1     	 bne .L24
 336              	.L23:
 337              	 .loc 1 125 0 is_stmt 0 discriminator 1
 338 003a 0123     	 movs r3,#1
 339 003c 00E0     	 b .L25
 340              	.L24:
 341              	 .loc 1 125 0 discriminator 3
 342 003e 0023     	 movs r3,#0
 343              	.L25:
 122:../ext_lib/tle94112el.c ****   return ((addr == TLE94112EL_SYS_DIAG1) || (addr == TLE94112EL_SYS_DIAG2) ||
 344              	 .loc 1 122 0 is_stmt 1
 345 0040 03F00103 	 and r3,r3,#1
 346 0044 DBB2     	 uxtb r3,r3
 126:../ext_lib/tle94112el.c **** }
 347              	 .loc 1 126 0
 348 0046 1846     	 mov r0,r3
 349 0048 0C37     	 adds r7,r7,#12
 350              	.LCFI27:
 351              	 .cfi_def_cfa_offset 4
 352 004a BD46     	 mov sp,r7
 353              	.LCFI28:
 354              	 .cfi_def_cfa_register 13
 355              	 
 356 004c 5DF8047B 	 ldr r7,[sp],#4
 357              	.LCFI29:
 358              	 .cfi_restore 7
 359              	 .cfi_def_cfa_offset 0
 360 0050 7047     	 bx lr
 361              	 .cfi_endproc
 362              	.LFE4:
 364 0052 00BF     	 .section .text.TLE94112EL_GetDeviceId,"ax",%progbits
 365              	 .align 2
 366              	 .global TLE94112EL_GetDeviceId
 367              	 .thumb
 368              	 .thumb_func
 370              	TLE94112EL_GetDeviceId:
 371              	.LFB5:
 127:../ext_lib/tle94112el.c **** 
 128:../ext_lib/tle94112el.c **** int32_t TLE94112EL_GetDeviceId(const TLE94112EL_t *const handler)
 129:../ext_lib/tle94112el.c **** {
 372              	 .loc 1 129 0
 373              	 .cfi_startproc
 374              	 
 375              	 
 376 0000 80B5     	 push {r7,lr}
 377              	.LCFI30:
 378              	 .cfi_def_cfa_offset 8
 379              	 .cfi_offset 7,-8
 380              	 .cfi_offset 14,-4
 381 0002 84B0     	 sub sp,sp,#16
 382              	.LCFI31:
 383              	 .cfi_def_cfa_offset 24
 384 0004 00AF     	 add r7,sp,#0
 385              	.LCFI32:
 386              	 .cfi_def_cfa_register 7
 387 0006 7860     	 str r0,[r7,#4]
 130:../ext_lib/tle94112el.c ****   uint8_t tx_data[2];
 131:../ext_lib/tle94112el.c ****   uint8_t rx_data[2];
 132:../ext_lib/tle94112el.c **** 
 133:../ext_lib/tle94112el.c ****   tx_data[0] = TLE94112EL_CONFIG_CTRL;
 388              	 .loc 1 133 0
 389 0008 6723     	 movs r3,#103
 390 000a 3B73     	 strb r3,[r7,#12]
 134:../ext_lib/tle94112el.c ****   tx_data[1] = 0xff;
 391              	 .loc 1 134 0
 392 000c FF23     	 movs r3,#255
 393 000e 7B73     	 strb r3,[r7,#13]
 135:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 394              	 .loc 1 135 0
 395 0010 7B68     	 ldr r3,[r7,#4]
 396 0012 9B68     	 ldr r3,[r3,#8]
 397 0014 07F10C01 	 add r1,r7,#12
 398 0018 07F10802 	 add r2,r7,#8
 399 001c 0846     	 mov r0,r1
 400 001e 1146     	 mov r1,r2
 401 0020 9847     	 blx r3
 136:../ext_lib/tle94112el.c **** 
 137:../ext_lib/tle94112el.c ****   if ((rx_data[0] & 0x80) != 0)
 402              	 .loc 1 137 0
 403 0022 3B7A     	 ldrb r3,[r7,#8]
 404 0024 DBB2     	 uxtb r3,r3
 405 0026 5BB2     	 sxtb r3,r3
 406 0028 002B     	 cmp r3,#0
 407 002a 02DA     	 bge .L28
 138:../ext_lib/tle94112el.c ****   {
 139:../ext_lib/tle94112el.c **** 	return -1;
 408              	 .loc 1 139 0
 409 002c 4FF0FF33 	 mov r3,#-1
 410 0030 02E0     	 b .L30
 411              	.L28:
 140:../ext_lib/tle94112el.c ****   }
 141:../ext_lib/tle94112el.c **** 
 142:../ext_lib/tle94112el.c ****   return ((rx_data[1] & TLE94112EL_CONFIG_CTRL_DEV_ID_Msk) >> TLE94112EL_CONFIG_CTRL_DEV_ID_Pos);
 412              	 .loc 1 142 0
 413 0032 7B7A     	 ldrb r3,[r7,#9]
 414 0034 03F00703 	 and r3,r3,#7
 415              	.L30:
 143:../ext_lib/tle94112el.c **** }
 416              	 .loc 1 143 0 discriminator 1
 417 0038 1846     	 mov r0,r3
 418 003a 1037     	 adds r7,r7,#16
 419              	.LCFI33:
 420              	 .cfi_def_cfa_offset 8
 421 003c BD46     	 mov sp,r7
 422              	.LCFI34:
 423              	 .cfi_def_cfa_register 13
 424              	 
 425 003e 80BD     	 pop {r7,pc}
 426              	 .cfi_endproc
 427              	.LFE5:
 429              	 .section .text.TLE94112EL_GetStatus,"ax",%progbits
 430              	 .align 2
 431              	 .global TLE94112EL_GetStatus
 432              	 .thumb
 433              	 .thumb_func
 435              	TLE94112EL_GetStatus:
 436              	.LFB6:
 144:../ext_lib/tle94112el.c **** 
 145:../ext_lib/tle94112el.c **** int32_t TLE94112EL_GetStatus(const TLE94112EL_t *const handler, uint8_t addr)
 146:../ext_lib/tle94112el.c **** {
 437              	 .loc 1 146 0
 438              	 .cfi_startproc
 439              	 
 440              	 
 441 0000 80B5     	 push {r7,lr}
 442              	.LCFI35:
 443              	 .cfi_def_cfa_offset 8
 444              	 .cfi_offset 7,-8
 445              	 .cfi_offset 14,-4
 446 0002 84B0     	 sub sp,sp,#16
 447              	.LCFI36:
 448              	 .cfi_def_cfa_offset 24
 449 0004 00AF     	 add r7,sp,#0
 450              	.LCFI37:
 451              	 .cfi_def_cfa_register 7
 452 0006 7860     	 str r0,[r7,#4]
 453 0008 0B46     	 mov r3,r1
 454 000a FB70     	 strb r3,[r7,#3]
 147:../ext_lib/tle94112el.c ****   uint8_t tx_data[2];
 148:../ext_lib/tle94112el.c ****   uint8_t rx_data[2];
 149:../ext_lib/tle94112el.c **** 
 150:../ext_lib/tle94112el.c ****   if (!is_valid_diag_reg(addr))
 455              	 .loc 1 150 0
 456 000c FB78     	 ldrb r3,[r7,#3]
 457 000e 1846     	 mov r0,r3
 458 0010 FFF7FEFF 	 bl is_valid_diag_reg
 459 0014 0346     	 mov r3,r0
 460 0016 83F00103 	 eor r3,r3,#1
 461 001a DBB2     	 uxtb r3,r3
 462 001c 002B     	 cmp r3,#0
 463 001e 02D0     	 beq .L32
 151:../ext_lib/tle94112el.c ****   {
 152:../ext_lib/tle94112el.c **** 	return -1;
 464              	 .loc 1 152 0
 465 0020 4FF0FF33 	 mov r3,#-1
 466 0024 15E0     	 b .L35
 467              	.L32:
 153:../ext_lib/tle94112el.c ****   }
 154:../ext_lib/tle94112el.c **** 
 155:../ext_lib/tle94112el.c ****   tx_data[0] = addr;
 468              	 .loc 1 155 0
 469 0026 FB78     	 ldrb r3,[r7,#3]
 470 0028 3B73     	 strb r3,[r7,#12]
 156:../ext_lib/tle94112el.c ****   tx_data[1] = 0xff;
 471              	 .loc 1 156 0
 472 002a FF23     	 movs r3,#255
 473 002c 7B73     	 strb r3,[r7,#13]
 157:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 474              	 .loc 1 157 0
 475 002e 7B68     	 ldr r3,[r7,#4]
 476 0030 9B68     	 ldr r3,[r3,#8]
 477 0032 07F10C01 	 add r1,r7,#12
 478 0036 07F10802 	 add r2,r7,#8
 479 003a 0846     	 mov r0,r1
 480 003c 1146     	 mov r1,r2
 481 003e 9847     	 blx r3
 158:../ext_lib/tle94112el.c **** 
 159:../ext_lib/tle94112el.c ****   if ((rx_data[0] & 0x80) != 0)
 482              	 .loc 1 159 0
 483 0040 3B7A     	 ldrb r3,[r7,#8]
 484 0042 DBB2     	 uxtb r3,r3
 485 0044 5BB2     	 sxtb r3,r3
 486 0046 002B     	 cmp r3,#0
 487 0048 02DA     	 bge .L34
 160:../ext_lib/tle94112el.c ****   {
 161:../ext_lib/tle94112el.c **** 	return -1;
 488              	 .loc 1 161 0
 489 004a 4FF0FF33 	 mov r3,#-1
 490 004e 00E0     	 b .L35
 491              	.L34:
 162:../ext_lib/tle94112el.c ****   }
 163:../ext_lib/tle94112el.c **** 
 164:../ext_lib/tle94112el.c ****   return rx_data[1];
 492              	 .loc 1 164 0
 493 0050 7B7A     	 ldrb r3,[r7,#9]
 494              	.L35:
 165:../ext_lib/tle94112el.c **** }
 495              	 .loc 1 165 0 discriminator 1
 496 0052 1846     	 mov r0,r3
 497 0054 1037     	 adds r7,r7,#16
 498              	.LCFI38:
 499              	 .cfi_def_cfa_offset 8
 500 0056 BD46     	 mov sp,r7
 501              	.LCFI39:
 502              	 .cfi_def_cfa_register 13
 503              	 
 504 0058 80BD     	 pop {r7,pc}
 505              	 .cfi_endproc
 506              	.LFE6:
 508 005a 00BF     	 .section .text.TLE94112EL_ClearStatus,"ax",%progbits
 509              	 .align 2
 510              	 .global TLE94112EL_ClearStatus
 511              	 .thumb
 512              	 .thumb_func
 514              	TLE94112EL_ClearStatus:
 515              	.LFB7:
 166:../ext_lib/tle94112el.c **** 
 167:../ext_lib/tle94112el.c **** int32_t TLE94112EL_ClearStatus(const TLE94112EL_t *const handler, uint8_t addr)
 168:../ext_lib/tle94112el.c **** {
 516              	 .loc 1 168 0
 517              	 .cfi_startproc
 518              	 
 519              	 
 520 0000 80B5     	 push {r7,lr}
 521              	.LCFI40:
 522              	 .cfi_def_cfa_offset 8
 523              	 .cfi_offset 7,-8
 524              	 .cfi_offset 14,-4
 525 0002 84B0     	 sub sp,sp,#16
 526              	.LCFI41:
 527              	 .cfi_def_cfa_offset 24
 528 0004 00AF     	 add r7,sp,#0
 529              	.LCFI42:
 530              	 .cfi_def_cfa_register 7
 531 0006 7860     	 str r0,[r7,#4]
 532 0008 0B46     	 mov r3,r1
 533 000a FB70     	 strb r3,[r7,#3]
 169:../ext_lib/tle94112el.c ****   uint8_t tx_data[2];
 170:../ext_lib/tle94112el.c ****   uint8_t rx_data[2];
 171:../ext_lib/tle94112el.c **** 
 172:../ext_lib/tle94112el.c ****   if (!is_valid_diag_reg(addr))
 534              	 .loc 1 172 0
 535 000c FB78     	 ldrb r3,[r7,#3]
 536 000e 1846     	 mov r0,r3
 537 0010 FFF7FEFF 	 bl is_valid_diag_reg
 538 0014 0346     	 mov r3,r0
 539 0016 83F00103 	 eor r3,r3,#1
 540 001a DBB2     	 uxtb r3,r3
 541 001c 002B     	 cmp r3,#0
 542 001e 02D0     	 beq .L37
 173:../ext_lib/tle94112el.c ****   {
 174:../ext_lib/tle94112el.c **** 	return -1;
 543              	 .loc 1 174 0
 544 0020 4FF0FF33 	 mov r3,#-1
 545 0024 10E0     	 b .L39
 546              	.L37:
 175:../ext_lib/tle94112el.c ****   }
 176:../ext_lib/tle94112el.c **** 
 177:../ext_lib/tle94112el.c ****   tx_data[0] = addr | TLE94112EL_SPI_CLEAR;
 547              	 .loc 1 177 0
 548 0026 FB78     	 ldrb r3,[r7,#3]
 549 0028 63F07F03 	 orn r3,r3,#127
 550 002c DBB2     	 uxtb r3,r3
 551 002e 3B73     	 strb r3,[r7,#12]
 178:../ext_lib/tle94112el.c ****   tx_data[1] = 0;
 552              	 .loc 1 178 0
 553 0030 0023     	 movs r3,#0
 554 0032 7B73     	 strb r3,[r7,#13]
 179:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 555              	 .loc 1 179 0
 556 0034 7B68     	 ldr r3,[r7,#4]
 557 0036 9B68     	 ldr r3,[r3,#8]
 558 0038 07F10C01 	 add r1,r7,#12
 559 003c 07F10802 	 add r2,r7,#8
 560 0040 0846     	 mov r0,r1
 561 0042 1146     	 mov r1,r2
 562 0044 9847     	 blx r3
 180:../ext_lib/tle94112el.c **** 
 181:../ext_lib/tle94112el.c ****   return rx_data[0];
 563              	 .loc 1 181 0
 564 0046 3B7A     	 ldrb r3,[r7,#8]
 565              	.L39:
 182:../ext_lib/tle94112el.c **** }
 566              	 .loc 1 182 0 discriminator 1
 567 0048 1846     	 mov r0,r3
 568 004a 1037     	 adds r7,r7,#16
 569              	.LCFI43:
 570              	 .cfi_def_cfa_offset 8
 571 004c BD46     	 mov sp,r7
 572              	.LCFI44:
 573              	 .cfi_def_cfa_register 13
 574              	 
 575 004e 80BD     	 pop {r7,pc}
 576              	 .cfi_endproc
 577              	.LFE7:
 579              	 .section .text.TLE94112EL_Enable,"ax",%progbits
 580              	 .align 2
 581              	 .global TLE94112EL_Enable
 582              	 .thumb
 583              	 .thumb_func
 585              	TLE94112EL_Enable:
 586              	.LFB8:
 183:../ext_lib/tle94112el.c **** 
 184:../ext_lib/tle94112el.c **** int32_t TLE94112EL_Enable(const TLE94112EL_t *const handler)
 185:../ext_lib/tle94112el.c **** {
 587              	 .loc 1 185 0
 588              	 .cfi_startproc
 589              	 
 590              	 
 591 0000 80B5     	 push {r7,lr}
 592              	.LCFI45:
 593              	 .cfi_def_cfa_offset 8
 594              	 .cfi_offset 7,-8
 595              	 .cfi_offset 14,-4
 596 0002 82B0     	 sub sp,sp,#8
 597              	.LCFI46:
 598              	 .cfi_def_cfa_offset 16
 599 0004 00AF     	 add r7,sp,#0
 600              	.LCFI47:
 601              	 .cfi_def_cfa_register 7
 602 0006 7860     	 str r0,[r7,#4]
 186:../ext_lib/tle94112el.c ****   handler->enable();
 603              	 .loc 1 186 0
 604 0008 7B68     	 ldr r3,[r7,#4]
 605 000a 1B68     	 ldr r3,[r3]
 606 000c 9847     	 blx r3
 187:../ext_lib/tle94112el.c ****   return 0;
 607              	 .loc 1 187 0
 608 000e 0023     	 movs r3,#0
 188:../ext_lib/tle94112el.c **** }
 609              	 .loc 1 188 0
 610 0010 1846     	 mov r0,r3
 611 0012 0837     	 adds r7,r7,#8
 612              	.LCFI48:
 613              	 .cfi_def_cfa_offset 8
 614 0014 BD46     	 mov sp,r7
 615              	.LCFI49:
 616              	 .cfi_def_cfa_register 13
 617              	 
 618 0016 80BD     	 pop {r7,pc}
 619              	 .cfi_endproc
 620              	.LFE8:
 622              	 .section .text.TLE94112EL_Disable,"ax",%progbits
 623              	 .align 2
 624              	 .global TLE94112EL_Disable
 625              	 .thumb
 626              	 .thumb_func
 628              	TLE94112EL_Disable:
 629              	.LFB9:
 189:../ext_lib/tle94112el.c **** 
 190:../ext_lib/tle94112el.c **** int32_t TLE94112EL_Disable(const TLE94112EL_t *const handler)
 191:../ext_lib/tle94112el.c **** {
 630              	 .loc 1 191 0
 631              	 .cfi_startproc
 632              	 
 633              	 
 634 0000 80B5     	 push {r7,lr}
 635              	.LCFI50:
 636              	 .cfi_def_cfa_offset 8
 637              	 .cfi_offset 7,-8
 638              	 .cfi_offset 14,-4
 639 0002 82B0     	 sub sp,sp,#8
 640              	.LCFI51:
 641              	 .cfi_def_cfa_offset 16
 642 0004 00AF     	 add r7,sp,#0
 643              	.LCFI52:
 644              	 .cfi_def_cfa_register 7
 645 0006 7860     	 str r0,[r7,#4]
 192:../ext_lib/tle94112el.c ****   handler->disable();
 646              	 .loc 1 192 0
 647 0008 7B68     	 ldr r3,[r7,#4]
 648 000a 5B68     	 ldr r3,[r3,#4]
 649 000c 9847     	 blx r3
 193:../ext_lib/tle94112el.c ****   return 0;
 650              	 .loc 1 193 0
 651 000e 0023     	 movs r3,#0
 194:../ext_lib/tle94112el.c **** }
 652              	 .loc 1 194 0
 653 0010 1846     	 mov r0,r3
 654 0012 0837     	 adds r7,r7,#8
 655              	.LCFI53:
 656              	 .cfi_def_cfa_offset 8
 657 0014 BD46     	 mov sp,r7
 658              	.LCFI54:
 659              	 .cfi_def_cfa_register 13
 660              	 
 661 0016 80BD     	 pop {r7,pc}
 662              	 .cfi_endproc
 663              	.LFE9:
 665              	 .section .text.TLE94112EL_SetPwmFrequency,"ax",%progbits
 666              	 .align 2
 667              	 .global TLE94112EL_SetPwmFrequency
 668              	 .thumb
 669              	 .thumb_func
 671              	TLE94112EL_SetPwmFrequency:
 672              	.LFB10:
 195:../ext_lib/tle94112el.c **** 
 196:../ext_lib/tle94112el.c **** int32_t TLE94112EL_SetPwmFrequency(const TLE94112EL_t *const handler, TLE94112EL_PWM_CHANNEL_t chan
 197:../ext_lib/tle94112el.c **** {
 673              	 .loc 1 197 0
 674              	 .cfi_startproc
 675              	 
 676              	 
 677 0000 80B5     	 push {r7,lr}
 678              	.LCFI55:
 679              	 .cfi_def_cfa_offset 8
 680              	 .cfi_offset 7,-8
 681              	 .cfi_offset 14,-4
 682 0002 84B0     	 sub sp,sp,#16
 683              	.LCFI56:
 684              	 .cfi_def_cfa_offset 24
 685 0004 00AF     	 add r7,sp,#0
 686              	.LCFI57:
 687              	 .cfi_def_cfa_register 7
 688 0006 7860     	 str r0,[r7,#4]
 689 0008 0B46     	 mov r3,r1
 690 000a FB70     	 strb r3,[r7,#3]
 691 000c 1346     	 mov r3,r2
 692 000e BB70     	 strb r3,[r7,#2]
 198:../ext_lib/tle94112el.c ****   if (channel >= TLE94112EL_PWM_CHANNEL_MAX)
 693              	 .loc 1 198 0
 694 0010 FB78     	 ldrb r3,[r7,#3]
 695 0012 022B     	 cmp r3,#2
 696 0014 02D9     	 bls .L45
 199:../ext_lib/tle94112el.c ****   {
 200:../ext_lib/tle94112el.c **** 	return -1;
 697              	 .loc 1 200 0
 698 0016 4FF0FF33 	 mov r3,#-1
 699 001a 32E0     	 b .L47
 700              	.L45:
 201:../ext_lib/tle94112el.c ****   }
 202:../ext_lib/tle94112el.c **** 
 203:../ext_lib/tle94112el.c ****   uint8_t tx_data[2];
 204:../ext_lib/tle94112el.c ****   uint8_t rx_data[2];
 205:../ext_lib/tle94112el.c **** 
 206:../ext_lib/tle94112el.c ****   tx_data[0] = TLE94112EL_PWM_CH_FREQ_CTRL;
 701              	 .loc 1 206 0
 702 001c 3323     	 movs r3,#51
 703 001e 3B73     	 strb r3,[r7,#12]
 207:../ext_lib/tle94112el.c ****   tx_data[1] = 0xff;
 704              	 .loc 1 207 0
 705 0020 FF23     	 movs r3,#255
 706 0022 7B73     	 strb r3,[r7,#13]
 208:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 707              	 .loc 1 208 0
 708 0024 7B68     	 ldr r3,[r7,#4]
 709 0026 9B68     	 ldr r3,[r3,#8]
 710 0028 07F10C01 	 add r1,r7,#12
 711 002c 07F10802 	 add r2,r7,#8
 712 0030 0846     	 mov r0,r1
 713 0032 1146     	 mov r1,r2
 714 0034 9847     	 blx r3
 209:../ext_lib/tle94112el.c **** 
 210:../ext_lib/tle94112el.c ****   tx_data[0] |= TLE94112EL_SPI_WRITE;
 715              	 .loc 1 210 0
 716 0036 3B7B     	 ldrb r3,[r7,#12]
 717 0038 63F07F03 	 orn r3,r3,#127
 718 003c DBB2     	 uxtb r3,r3
 719 003e 3B73     	 strb r3,[r7,#12]
 211:../ext_lib/tle94112el.c ****   tx_data[1] = (rx_data[1] & (uint8_t)~(TLE94112EL_PWM_CH_FREQ_CTRL_PWM_CH_FREQ_Msk << (channel * T
 720              	 .loc 1 211 0
 721 0040 7A7A     	 ldrb r2,[r7,#9]
 722 0042 FB78     	 ldrb r3,[r7,#3]
 723 0044 5B00     	 lsls r3,r3,#1
 724 0046 0321     	 movs r1,#3
 725 0048 01FA03F3 	 lsl r3,r1,r3
 726 004c DBB2     	 uxtb r3,r3
 727 004e DB43     	 mvns r3,r3
 728 0050 DBB2     	 uxtb r3,r3
 729 0052 1340     	 ands r3,r3,r2
 730 0054 DBB2     	 uxtb r3,r3
 731 0056 D9B2     	 uxtb r1,r3
 212:../ext_lib/tle94112el.c **** 		       (freq << (channel * TLE94112EL_PWM_CH_FREQ_CTRL_PWM_CH_FREQ_Size));
 732              	 .loc 1 212 0
 733 0058 BA78     	 ldrb r2,[r7,#2]
 734 005a FB78     	 ldrb r3,[r7,#3]
 735 005c 5B00     	 lsls r3,r3,#1
 736 005e 02FA03F3 	 lsl r3,r2,r3
 211:../ext_lib/tle94112el.c ****   tx_data[1] = (rx_data[1] & (uint8_t)~(TLE94112EL_PWM_CH_FREQ_CTRL_PWM_CH_FREQ_Msk << (channel * T
 737              	 .loc 1 211 0
 738 0062 DBB2     	 uxtb r3,r3
 739 0064 0A46     	 mov r2,r1
 740 0066 1343     	 orrs r3,r3,r2
 741 0068 DBB2     	 uxtb r3,r3
 742 006a DBB2     	 uxtb r3,r3
 743 006c 7B73     	 strb r3,[r7,#13]
 213:../ext_lib/tle94112el.c **** 
 214:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 744              	 .loc 1 214 0
 745 006e 7B68     	 ldr r3,[r7,#4]
 746 0070 9B68     	 ldr r3,[r3,#8]
 747 0072 07F10C01 	 add r1,r7,#12
 748 0076 07F10802 	 add r2,r7,#8
 749 007a 0846     	 mov r0,r1
 750 007c 1146     	 mov r1,r2
 751 007e 9847     	 blx r3
 215:../ext_lib/tle94112el.c **** 
 216:../ext_lib/tle94112el.c ****   return rx_data[0];
 752              	 .loc 1 216 0
 753 0080 3B7A     	 ldrb r3,[r7,#8]
 754              	.L47:
 217:../ext_lib/tle94112el.c **** }
 755              	 .loc 1 217 0 discriminator 1
 756 0082 1846     	 mov r0,r3
 757 0084 1037     	 adds r7,r7,#16
 758              	.LCFI58:
 759              	 .cfi_def_cfa_offset 8
 760 0086 BD46     	 mov sp,r7
 761              	.LCFI59:
 762              	 .cfi_def_cfa_register 13
 763              	 
 764 0088 80BD     	 pop {r7,pc}
 765              	 .cfi_endproc
 766              	.LFE10:
 768 008a 00BF     	 .section .text.TLE94112EL_SetPwmDutyCycle,"ax",%progbits
 769              	 .align 2
 770              	 .global TLE94112EL_SetPwmDutyCycle
 771              	 .thumb
 772              	 .thumb_func
 774              	TLE94112EL_SetPwmDutyCycle:
 775              	.LFB11:
 218:../ext_lib/tle94112el.c **** 
 219:../ext_lib/tle94112el.c **** int32_t TLE94112EL_SetPwmDutyCycle(const TLE94112EL_t *const handler, TLE94112EL_PWM_CHANNEL_t chan
 220:../ext_lib/tle94112el.c **** {
 776              	 .loc 1 220 0
 777              	 .cfi_startproc
 778              	 
 779              	 
 780 0000 80B5     	 push {r7,lr}
 781              	.LCFI60:
 782              	 .cfi_def_cfa_offset 8
 783              	 .cfi_offset 7,-8
 784              	 .cfi_offset 14,-4
 785 0002 84B0     	 sub sp,sp,#16
 786              	.LCFI61:
 787              	 .cfi_def_cfa_offset 24
 788 0004 00AF     	 add r7,sp,#0
 789              	.LCFI62:
 790              	 .cfi_def_cfa_register 7
 791 0006 7860     	 str r0,[r7,#4]
 792 0008 0B46     	 mov r3,r1
 793 000a FB70     	 strb r3,[r7,#3]
 794 000c 1346     	 mov r3,r2
 795 000e BB70     	 strb r3,[r7,#2]
 221:../ext_lib/tle94112el.c ****   if (channel >= TLE94112EL_PWM_CHANNEL_MAX)
 796              	 .loc 1 221 0
 797 0010 FB78     	 ldrb r3,[r7,#3]
 798 0012 022B     	 cmp r3,#2
 799 0014 02D9     	 bls .L49
 222:../ext_lib/tle94112el.c ****   {
 223:../ext_lib/tle94112el.c **** 	return -1;
 800              	 .loc 1 223 0
 801 0016 4FF0FF33 	 mov r3,#-1
 802 001a 14E0     	 b .L51
 803              	.L49:
 224:../ext_lib/tle94112el.c ****   }
 225:../ext_lib/tle94112el.c **** 
 226:../ext_lib/tle94112el.c ****   uint8_t tx_data[2];
 227:../ext_lib/tle94112el.c ****   uint8_t rx_data[2];
 228:../ext_lib/tle94112el.c **** 
 229:../ext_lib/tle94112el.c ****   tx_data[0] = get_pwm_channel_dc_address(channel) | TLE94112EL_SPI_WRITE;
 804              	 .loc 1 229 0
 805 001c FB78     	 ldrb r3,[r7,#3]
 806 001e 1846     	 mov r0,r3
 807 0020 FFF7FEFF 	 bl get_pwm_channel_dc_address
 808 0024 0346     	 mov r3,r0
 809 0026 63F07F03 	 orn r3,r3,#127
 810 002a DBB2     	 uxtb r3,r3
 811 002c 3B73     	 strb r3,[r7,#12]
 230:../ext_lib/tle94112el.c ****   tx_data[1] = duty_cyle;
 812              	 .loc 1 230 0
 813 002e BB78     	 ldrb r3,[r7,#2]
 814 0030 7B73     	 strb r3,[r7,#13]
 231:../ext_lib/tle94112el.c **** 
 232:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 815              	 .loc 1 232 0
 816 0032 7B68     	 ldr r3,[r7,#4]
 817 0034 9B68     	 ldr r3,[r3,#8]
 818 0036 07F10C01 	 add r1,r7,#12
 819 003a 07F10802 	 add r2,r7,#8
 820 003e 0846     	 mov r0,r1
 821 0040 1146     	 mov r1,r2
 822 0042 9847     	 blx r3
 233:../ext_lib/tle94112el.c **** 
 234:../ext_lib/tle94112el.c ****   return rx_data[0];
 823              	 .loc 1 234 0
 824 0044 3B7A     	 ldrb r3,[r7,#8]
 825              	.L51:
 235:../ext_lib/tle94112el.c **** }
 826              	 .loc 1 235 0 discriminator 1
 827 0046 1846     	 mov r0,r3
 828 0048 1037     	 adds r7,r7,#16
 829              	.LCFI63:
 830              	 .cfi_def_cfa_offset 8
 831 004a BD46     	 mov sp,r7
 832              	.LCFI64:
 833              	 .cfi_def_cfa_register 13
 834              	 
 835 004c 80BD     	 pop {r7,pc}
 836              	 .cfi_endproc
 837              	.LFE11:
 839 004e 00BF     	 .section .text.TLE94112EL_GetRegister,"ax",%progbits
 840              	 .align 2
 841              	 .global TLE94112EL_GetRegister
 842              	 .thumb
 843              	 .thumb_func
 845              	TLE94112EL_GetRegister:
 846              	.LFB12:
 236:../ext_lib/tle94112el.c **** 
 237:../ext_lib/tle94112el.c **** int32_t TLE94112EL_GetRegister(const TLE94112EL_t *const handler, uint8_t reg_addr)
 238:../ext_lib/tle94112el.c **** {
 847              	 .loc 1 238 0
 848              	 .cfi_startproc
 849              	 
 850              	 
 851 0000 80B5     	 push {r7,lr}
 852              	.LCFI65:
 853              	 .cfi_def_cfa_offset 8
 854              	 .cfi_offset 7,-8
 855              	 .cfi_offset 14,-4
 856 0002 84B0     	 sub sp,sp,#16
 857              	.LCFI66:
 858              	 .cfi_def_cfa_offset 24
 859 0004 00AF     	 add r7,sp,#0
 860              	.LCFI67:
 861              	 .cfi_def_cfa_register 7
 862 0006 7860     	 str r0,[r7,#4]
 863 0008 0B46     	 mov r3,r1
 864 000a FB70     	 strb r3,[r7,#3]
 239:../ext_lib/tle94112el.c ****   uint8_t tx_data[2];
 240:../ext_lib/tle94112el.c ****   uint8_t rx_data[2];
 241:../ext_lib/tle94112el.c **** 
 242:../ext_lib/tle94112el.c ****   tx_data[0] = reg_addr;
 865              	 .loc 1 242 0
 866 000c FB78     	 ldrb r3,[r7,#3]
 867 000e 3B73     	 strb r3,[r7,#12]
 243:../ext_lib/tle94112el.c ****   tx_data[1] = 0xff;
 868              	 .loc 1 243 0
 869 0010 FF23     	 movs r3,#255
 870 0012 7B73     	 strb r3,[r7,#13]
 244:../ext_lib/tle94112el.c **** 
 245:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 871              	 .loc 1 245 0
 872 0014 7B68     	 ldr r3,[r7,#4]
 873 0016 9B68     	 ldr r3,[r3,#8]
 874 0018 07F10C01 	 add r1,r7,#12
 875 001c 07F10802 	 add r2,r7,#8
 876 0020 0846     	 mov r0,r1
 877 0022 1146     	 mov r1,r2
 878 0024 9847     	 blx r3
 246:../ext_lib/tle94112el.c **** 
 247:../ext_lib/tle94112el.c ****   return rx_data[1];
 879              	 .loc 1 247 0
 880 0026 7B7A     	 ldrb r3,[r7,#9]
 248:../ext_lib/tle94112el.c **** }
 881              	 .loc 1 248 0
 882 0028 1846     	 mov r0,r3
 883 002a 1037     	 adds r7,r7,#16
 884              	.LCFI68:
 885              	 .cfi_def_cfa_offset 8
 886 002c BD46     	 mov sp,r7
 887              	.LCFI69:
 888              	 .cfi_def_cfa_register 13
 889              	 
 890 002e 80BD     	 pop {r7,pc}
 891              	 .cfi_endproc
 892              	.LFE12:
 894              	 .section .text.TLE94112EL_SetRegister,"ax",%progbits
 895              	 .align 2
 896              	 .global TLE94112EL_SetRegister
 897              	 .thumb
 898              	 .thumb_func
 900              	TLE94112EL_SetRegister:
 901              	.LFB13:
 249:../ext_lib/tle94112el.c **** 
 250:../ext_lib/tle94112el.c **** int32_t TLE94112EL_SetRegister(const TLE94112EL_t *const handler, uint8_t reg_addr, uint8_t reg_val
 251:../ext_lib/tle94112el.c **** {
 902              	 .loc 1 251 0
 903              	 .cfi_startproc
 904              	 
 905              	 
 906 0000 80B5     	 push {r7,lr}
 907              	.LCFI70:
 908              	 .cfi_def_cfa_offset 8
 909              	 .cfi_offset 7,-8
 910              	 .cfi_offset 14,-4
 911 0002 84B0     	 sub sp,sp,#16
 912              	.LCFI71:
 913              	 .cfi_def_cfa_offset 24
 914 0004 00AF     	 add r7,sp,#0
 915              	.LCFI72:
 916              	 .cfi_def_cfa_register 7
 917 0006 7860     	 str r0,[r7,#4]
 918 0008 0846     	 mov r0,r1
 919 000a 1146     	 mov r1,r2
 920 000c 1A46     	 mov r2,r3
 921 000e 0346     	 mov r3,r0
 922 0010 FB70     	 strb r3,[r7,#3]
 923 0012 0B46     	 mov r3,r1
 924 0014 BB70     	 strb r3,[r7,#2]
 925 0016 1346     	 mov r3,r2
 926 0018 7B70     	 strb r3,[r7,#1]
 252:../ext_lib/tle94112el.c ****   uint8_t tx_data[2];
 253:../ext_lib/tle94112el.c ****   uint8_t rx_data[2];
 254:../ext_lib/tle94112el.c **** 
 255:../ext_lib/tle94112el.c ****   tx_data[0] = reg_addr;
 927              	 .loc 1 255 0
 928 001a FB78     	 ldrb r3,[r7,#3]
 929 001c 3B73     	 strb r3,[r7,#12]
 256:../ext_lib/tle94112el.c ****   tx_data[1] = 0xff;
 930              	 .loc 1 256 0
 931 001e FF23     	 movs r3,#255
 932 0020 7B73     	 strb r3,[r7,#13]
 257:../ext_lib/tle94112el.c **** 
 258:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 933              	 .loc 1 258 0
 934 0022 7B68     	 ldr r3,[r7,#4]
 935 0024 9B68     	 ldr r3,[r3,#8]
 936 0026 07F10C01 	 add r1,r7,#12
 937 002a 07F10802 	 add r2,r7,#8
 938 002e 0846     	 mov r0,r1
 939 0030 1146     	 mov r1,r2
 940 0032 9847     	 blx r3
 259:../ext_lib/tle94112el.c **** 
 260:../ext_lib/tle94112el.c ****   tx_data[0] |= TLE94112EL_SPI_WRITE;
 941              	 .loc 1 260 0
 942 0034 3B7B     	 ldrb r3,[r7,#12]
 943 0036 63F07F03 	 orn r3,r3,#127
 944 003a DBB2     	 uxtb r3,r3
 945 003c 3B73     	 strb r3,[r7,#12]
 261:../ext_lib/tle94112el.c ****   tx_data[1] = (rx_data[1] & (uint8_t)~reg_mask) | reg_val;
 946              	 .loc 1 261 0
 947 003e 7A7A     	 ldrb r2,[r7,#9]
 948 0040 7B78     	 ldrb r3,[r7,#1]
 949 0042 DB43     	 mvns r3,r3
 950 0044 DBB2     	 uxtb r3,r3
 951 0046 1340     	 ands r3,r3,r2
 952 0048 DAB2     	 uxtb r2,r3
 953 004a BB78     	 ldrb r3,[r7,#2]
 954 004c 1343     	 orrs r3,r3,r2
 955 004e DBB2     	 uxtb r3,r3
 956 0050 7B73     	 strb r3,[r7,#13]
 262:../ext_lib/tle94112el.c **** 
 263:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 957              	 .loc 1 263 0
 958 0052 7B68     	 ldr r3,[r7,#4]
 959 0054 9B68     	 ldr r3,[r3,#8]
 960 0056 07F10C01 	 add r1,r7,#12
 961 005a 07F10802 	 add r2,r7,#8
 962 005e 0846     	 mov r0,r1
 963 0060 1146     	 mov r1,r2
 964 0062 9847     	 blx r3
 264:../ext_lib/tle94112el.c **** 
 265:../ext_lib/tle94112el.c ****   return rx_data[0];
 965              	 .loc 1 265 0
 966 0064 3B7A     	 ldrb r3,[r7,#8]
 266:../ext_lib/tle94112el.c **** }
 967              	 .loc 1 266 0
 968 0066 1846     	 mov r0,r3
 969 0068 1037     	 adds r7,r7,#16
 970              	.LCFI73:
 971              	 .cfi_def_cfa_offset 8
 972 006a BD46     	 mov sp,r7
 973              	.LCFI74:
 974              	 .cfi_def_cfa_register 13
 975              	 
 976 006c 80BD     	 pop {r7,pc}
 977              	 .cfi_endproc
 978              	.LFE13:
 980 006e 00BF     	 .section .text.TLE94112EL_SetHBrigeMode,"ax",%progbits
 981              	 .align 2
 982              	 .global TLE94112EL_SetHBrigeMode
 983              	 .thumb
 984              	 .thumb_func
 986              	TLE94112EL_SetHBrigeMode:
 987              	.LFB14:
 267:../ext_lib/tle94112el.c **** 
 268:../ext_lib/tle94112el.c **** int32_t TLE94112EL_SetHBrigeMode(const TLE94112EL_t *const handler, TLE94112EL_HBRIDGE_t hbridge, T
 269:../ext_lib/tle94112el.c **** {
 988              	 .loc 1 269 0
 989              	 .cfi_startproc
 990              	 
 991              	 
 992 0000 80B5     	 push {r7,lr}
 993              	.LCFI75:
 994              	 .cfi_def_cfa_offset 8
 995              	 .cfi_offset 7,-8
 996              	 .cfi_offset 14,-4
 997 0002 84B0     	 sub sp,sp,#16
 998              	.LCFI76:
 999              	 .cfi_def_cfa_offset 24
 1000 0004 00AF     	 add r7,sp,#0
 1001              	.LCFI77:
 1002              	 .cfi_def_cfa_register 7
 1003 0006 7860     	 str r0,[r7,#4]
 1004 0008 0B46     	 mov r3,r1
 1005 000a FB70     	 strb r3,[r7,#3]
 1006 000c 1346     	 mov r3,r2
 1007 000e BB70     	 strb r3,[r7,#2]
 270:../ext_lib/tle94112el.c ****   if (hbridge >= TLE94112EL_HBRIDGE_MAX)
 1008              	 .loc 1 270 0
 1009 0010 FB78     	 ldrb r3,[r7,#3]
 1010 0012 0B2B     	 cmp r3,#11
 1011 0014 02D9     	 bls .L57
 271:../ext_lib/tle94112el.c ****   {
 272:../ext_lib/tle94112el.c **** 	return -1;
 1012              	 .loc 1 272 0
 1013 0016 4FF0FF33 	 mov r3,#-1
 1014 001a 3AE0     	 b .L59
 1015              	.L57:
 273:../ext_lib/tle94112el.c ****   }
 274:../ext_lib/tle94112el.c **** 
 275:../ext_lib/tle94112el.c ****   uint8_t tx_data[2];
 276:../ext_lib/tle94112el.c ****   uint8_t rx_data[2];
 277:../ext_lib/tle94112el.c **** 
 278:../ext_lib/tle94112el.c ****   tx_data[0] = get_hbridge_mode_address(hbridge);
 1016              	 .loc 1 278 0
 1017 001c FB78     	 ldrb r3,[r7,#3]
 1018 001e 1846     	 mov r0,r3
 1019 0020 FFF7FEFF 	 bl get_hbridge_mode_address
 1020 0024 0346     	 mov r3,r0
 1021 0026 3B73     	 strb r3,[r7,#12]
 279:../ext_lib/tle94112el.c ****   tx_data[1] = 0xff;
 1022              	 .loc 1 279 0
 1023 0028 FF23     	 movs r3,#255
 1024 002a 7B73     	 strb r3,[r7,#13]
 280:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 1025              	 .loc 1 280 0
 1026 002c 7B68     	 ldr r3,[r7,#4]
 1027 002e 9B68     	 ldr r3,[r3,#8]
 1028 0030 07F10C01 	 add r1,r7,#12
 1029 0034 07F10802 	 add r2,r7,#8
 1030 0038 0846     	 mov r0,r1
 1031 003a 1146     	 mov r1,r2
 1032 003c 9847     	 blx r3
 281:../ext_lib/tle94112el.c **** 
 282:../ext_lib/tle94112el.c ****   tx_data[0] |= TLE94112EL_SPI_WRITE;
 1033              	 .loc 1 282 0
 1034 003e 3B7B     	 ldrb r3,[r7,#12]
 1035 0040 63F07F03 	 orn r3,r3,#127
 1036 0044 DBB2     	 uxtb r3,r3
 1037 0046 3B73     	 strb r3,[r7,#12]
 283:../ext_lib/tle94112el.c ****   tx_data[1] = (rx_data[1] & (uint8_t)~(TLE94112EL_HB_MODE_CTRL_HB_MODE_Msk << ((hbridge % 4) * TLE
 1038              	 .loc 1 283 0
 1039 0048 7A7A     	 ldrb r2,[r7,#9]
 1040 004a FB78     	 ldrb r3,[r7,#3]
 1041 004c 03F00303 	 and r3,r3,#3
 1042 0050 5B00     	 lsls r3,r3,#1
 1043 0052 0321     	 movs r1,#3
 1044 0054 01FA03F3 	 lsl r3,r1,r3
 1045 0058 DBB2     	 uxtb r3,r3
 1046 005a DB43     	 mvns r3,r3
 1047 005c DBB2     	 uxtb r3,r3
 1048 005e 1340     	 ands r3,r3,r2
 1049 0060 DBB2     	 uxtb r3,r3
 1050 0062 D9B2     	 uxtb r1,r3
 284:../ext_lib/tle94112el.c **** 		       (mode << ((hbridge % 4) * TLE94112EL_HB_MODE_CTRL_HB_MODE_Size));
 1051              	 .loc 1 284 0
 1052 0064 BA78     	 ldrb r2,[r7,#2]
 1053 0066 FB78     	 ldrb r3,[r7,#3]
 1054 0068 03F00303 	 and r3,r3,#3
 1055 006c 5B00     	 lsls r3,r3,#1
 1056 006e 02FA03F3 	 lsl r3,r2,r3
 283:../ext_lib/tle94112el.c ****   tx_data[1] = (rx_data[1] & (uint8_t)~(TLE94112EL_HB_MODE_CTRL_HB_MODE_Msk << ((hbridge % 4) * TLE
 1057              	 .loc 1 283 0
 1058 0072 DBB2     	 uxtb r3,r3
 1059 0074 0A46     	 mov r2,r1
 1060 0076 1343     	 orrs r3,r3,r2
 1061 0078 DBB2     	 uxtb r3,r3
 1062 007a DBB2     	 uxtb r3,r3
 1063 007c 7B73     	 strb r3,[r7,#13]
 285:../ext_lib/tle94112el.c **** 
 286:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 1064              	 .loc 1 286 0
 1065 007e 7B68     	 ldr r3,[r7,#4]
 1066 0080 9B68     	 ldr r3,[r3,#8]
 1067 0082 07F10C01 	 add r1,r7,#12
 1068 0086 07F10802 	 add r2,r7,#8
 1069 008a 0846     	 mov r0,r1
 1070 008c 1146     	 mov r1,r2
 1071 008e 9847     	 blx r3
 287:../ext_lib/tle94112el.c **** 
 288:../ext_lib/tle94112el.c ****   return rx_data[0];
 1072              	 .loc 1 288 0
 1073 0090 3B7A     	 ldrb r3,[r7,#8]
 1074              	.L59:
 289:../ext_lib/tle94112el.c **** }
 1075              	 .loc 1 289 0 discriminator 1
 1076 0092 1846     	 mov r0,r3
 1077 0094 1037     	 adds r7,r7,#16
 1078              	.LCFI78:
 1079              	 .cfi_def_cfa_offset 8
 1080 0096 BD46     	 mov sp,r7
 1081              	.LCFI79:
 1082              	 .cfi_def_cfa_register 13
 1083              	 
 1084 0098 80BD     	 pop {r7,pc}
 1085              	 .cfi_endproc
 1086              	.LFE14:
 1088 009a 00BF     	 .section .text.TLE94112EL_SetHBrigeFreeWheeling,"ax",%progbits
 1089              	 .align 2
 1090              	 .global TLE94112EL_SetHBrigeFreeWheeling
 1091              	 .thumb
 1092              	 .thumb_func
 1094              	TLE94112EL_SetHBrigeFreeWheeling:
 1095              	.LFB15:
 290:../ext_lib/tle94112el.c **** 
 291:../ext_lib/tle94112el.c **** int32_t TLE94112EL_SetHBrigeFreeWheeling(const TLE94112EL_t *const handler, TLE94112EL_HBRIDGE_t hb
 292:../ext_lib/tle94112el.c **** {
 1096              	 .loc 1 292 0
 1097              	 .cfi_startproc
 1098              	 
 1099              	 
 1100 0000 80B5     	 push {r7,lr}
 1101              	.LCFI80:
 1102              	 .cfi_def_cfa_offset 8
 1103              	 .cfi_offset 7,-8
 1104              	 .cfi_offset 14,-4
 1105 0002 84B0     	 sub sp,sp,#16
 1106              	.LCFI81:
 1107              	 .cfi_def_cfa_offset 24
 1108 0004 00AF     	 add r7,sp,#0
 1109              	.LCFI82:
 1110              	 .cfi_def_cfa_register 7
 1111 0006 7860     	 str r0,[r7,#4]
 1112 0008 0B46     	 mov r3,r1
 1113 000a FB70     	 strb r3,[r7,#3]
 1114 000c 1346     	 mov r3,r2
 1115 000e BB70     	 strb r3,[r7,#2]
 293:../ext_lib/tle94112el.c ****   if (hbridge >= TLE94112EL_HBRIDGE_MAX)
 1116              	 .loc 1 293 0
 1117 0010 FB78     	 ldrb r3,[r7,#3]
 1118 0012 0B2B     	 cmp r3,#11
 1119 0014 02D9     	 bls .L61
 294:../ext_lib/tle94112el.c ****   {
 295:../ext_lib/tle94112el.c **** 	return -1;
 1120              	 .loc 1 295 0
 1121 0016 4FF0FF33 	 mov r3,#-1
 1122 001a 46E0     	 b .L65
 1123              	.L61:
 296:../ext_lib/tle94112el.c ****   }
 297:../ext_lib/tle94112el.c **** 
 298:../ext_lib/tle94112el.c ****   uint8_t tx_data[2];
 299:../ext_lib/tle94112el.c ****   uint8_t rx_data[2];
 300:../ext_lib/tle94112el.c **** 
 301:../ext_lib/tle94112el.c ****   tx_data[0] = get_hbridge_fw_address(hbridge);
 1124              	 .loc 1 301 0
 1125 001c FB78     	 ldrb r3,[r7,#3]
 1126 001e 1846     	 mov r0,r3
 1127 0020 FFF7FEFF 	 bl get_hbridge_fw_address
 1128 0024 0346     	 mov r3,r0
 1129 0026 3B73     	 strb r3,[r7,#12]
 302:../ext_lib/tle94112el.c ****   tx_data[1] = 0xff;
 1130              	 .loc 1 302 0
 1131 0028 FF23     	 movs r3,#255
 1132 002a 7B73     	 strb r3,[r7,#13]
 303:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 1133              	 .loc 1 303 0
 1134 002c 7B68     	 ldr r3,[r7,#4]
 1135 002e 9B68     	 ldr r3,[r3,#8]
 1136 0030 07F10C01 	 add r1,r7,#12
 1137 0034 07F10802 	 add r2,r7,#8
 1138 0038 0846     	 mov r0,r1
 1139 003a 1146     	 mov r1,r2
 1140 003c 9847     	 blx r3
 304:../ext_lib/tle94112el.c **** 
 305:../ext_lib/tle94112el.c ****   tx_data[0] |= TLE94112EL_SPI_WRITE;
 1141              	 .loc 1 305 0
 1142 003e 3B7B     	 ldrb r3,[r7,#12]
 1143 0040 63F07F03 	 orn r3,r3,#127
 1144 0044 DBB2     	 uxtb r3,r3
 1145 0046 3B73     	 strb r3,[r7,#12]
 306:../ext_lib/tle94112el.c ****   tx_data[1] = (rx_data[1] & (uint8_t)~(1 << ((hbridge + 2) % 8))) |
 1146              	 .loc 1 306 0
 1147 0048 7A7A     	 ldrb r2,[r7,#9]
 1148 004a FB78     	 ldrb r3,[r7,#3]
 1149 004c 991C     	 adds r1,r3,#2
 1150 004e 194B     	 ldr r3,.L66
 1151 0050 0B40     	 ands r3,r3,r1
 1152 0052 002B     	 cmp r3,#0
 1153 0054 03DA     	 bge .L63
 1154 0056 013B     	 subs r3,r3,#1
 1155 0058 63F00703 	 orn r3,r3,#7
 1156 005c 0133     	 adds r3,r3,#1
 1157              	.L63:
 1158 005e 1946     	 mov r1,r3
 1159 0060 0123     	 movs r3,#1
 1160 0062 8B40     	 lsls r3,r3,r1
 1161 0064 DBB2     	 uxtb r3,r3
 1162 0066 DB43     	 mvns r3,r3
 1163 0068 DBB2     	 uxtb r3,r3
 1164 006a 1340     	 ands r3,r3,r2
 1165 006c DBB2     	 uxtb r3,r3
 1166 006e D8B2     	 uxtb r0,r3
 307:../ext_lib/tle94112el.c ****                ((enable_free_wheeling ? 1 : 0) << ((hbridge + 2) % 8));
 1167              	 .loc 1 307 0
 1168 0070 BA78     	 ldrb r2,[r7,#2]
 1169 0072 FB78     	 ldrb r3,[r7,#3]
 1170 0074 991C     	 adds r1,r3,#2
 1171 0076 0F4B     	 ldr r3,.L66
 1172 0078 0B40     	 ands r3,r3,r1
 1173 007a 002B     	 cmp r3,#0
 1174 007c 03DA     	 bge .L64
 1175 007e 013B     	 subs r3,r3,#1
 1176 0080 63F00703 	 orn r3,r3,#7
 1177 0084 0133     	 adds r3,r3,#1
 1178              	.L64:
 1179 0086 02FA03F3 	 lsl r3,r2,r3
 306:../ext_lib/tle94112el.c ****   tx_data[1] = (rx_data[1] & (uint8_t)~(1 << ((hbridge + 2) % 8))) |
 1180              	 .loc 1 306 0
 1181 008a DBB2     	 uxtb r3,r3
 1182 008c 0246     	 mov r2,r0
 1183 008e 1343     	 orrs r3,r3,r2
 1184 0090 DBB2     	 uxtb r3,r3
 1185 0092 DBB2     	 uxtb r3,r3
 1186 0094 7B73     	 strb r3,[r7,#13]
 308:../ext_lib/tle94112el.c **** 
 309:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 1187              	 .loc 1 309 0
 1188 0096 7B68     	 ldr r3,[r7,#4]
 1189 0098 9B68     	 ldr r3,[r3,#8]
 1190 009a 07F10C01 	 add r1,r7,#12
 1191 009e 07F10802 	 add r2,r7,#8
 1192 00a2 0846     	 mov r0,r1
 1193 00a4 1146     	 mov r1,r2
 1194 00a6 9847     	 blx r3
 310:../ext_lib/tle94112el.c **** 
 311:../ext_lib/tle94112el.c ****   return rx_data[0];
 1195              	 .loc 1 311 0
 1196 00a8 3B7A     	 ldrb r3,[r7,#8]
 1197              	.L65:
 312:../ext_lib/tle94112el.c **** }
 1198              	 .loc 1 312 0 discriminator 1
 1199 00aa 1846     	 mov r0,r3
 1200 00ac 1037     	 adds r7,r7,#16
 1201              	.LCFI83:
 1202              	 .cfi_def_cfa_offset 8
 1203 00ae BD46     	 mov sp,r7
 1204              	.LCFI84:
 1205              	 .cfi_def_cfa_register 13
 1206              	 
 1207 00b0 80BD     	 pop {r7,pc}
 1208              	.L67:
 1209 00b2 00BF     	 .align 2
 1210              	.L66:
 1211 00b4 07000080 	 .word -2147483641
 1212              	 .cfi_endproc
 1213              	.LFE15:
 1215              	 .section .text.TLE94112EL_SetHBrigeOutput,"ax",%progbits
 1216              	 .align 2
 1217              	 .global TLE94112EL_SetHBrigeOutput
 1218              	 .thumb
 1219              	 .thumb_func
 1221              	TLE94112EL_SetHBrigeOutput:
 1222              	.LFB16:
 313:../ext_lib/tle94112el.c **** 
 314:../ext_lib/tle94112el.c **** 
 315:../ext_lib/tle94112el.c **** int32_t TLE94112EL_SetHBrigeOutput(const TLE94112EL_t *const handler, TLE94112EL_HBRIDGE_t hbridge,
 316:../ext_lib/tle94112el.c **** {
 1223              	 .loc 1 316 0
 1224              	 .cfi_startproc
 1225              	 
 1226              	 
 1227 0000 80B5     	 push {r7,lr}
 1228              	.LCFI85:
 1229              	 .cfi_def_cfa_offset 8
 1230              	 .cfi_offset 7,-8
 1231              	 .cfi_offset 14,-4
 1232 0002 84B0     	 sub sp,sp,#16
 1233              	.LCFI86:
 1234              	 .cfi_def_cfa_offset 24
 1235 0004 00AF     	 add r7,sp,#0
 1236              	.LCFI87:
 1237              	 .cfi_def_cfa_register 7
 1238 0006 7860     	 str r0,[r7,#4]
 1239 0008 0B46     	 mov r3,r1
 1240 000a FB70     	 strb r3,[r7,#3]
 1241 000c 1346     	 mov r3,r2
 1242 000e BB70     	 strb r3,[r7,#2]
 317:../ext_lib/tle94112el.c ****   if (hbridge >= TLE94112EL_HBRIDGE_MAX)
 1243              	 .loc 1 317 0
 1244 0010 FB78     	 ldrb r3,[r7,#3]
 1245 0012 0B2B     	 cmp r3,#11
 1246 0014 02D9     	 bls .L69
 318:../ext_lib/tle94112el.c ****   {
 319:../ext_lib/tle94112el.c **** 	return -1;
 1247              	 .loc 1 319 0
 1248 0016 4FF0FF33 	 mov r3,#-1
 1249 001a 3AE0     	 b .L71
 1250              	.L69:
 320:../ext_lib/tle94112el.c ****   }
 321:../ext_lib/tle94112el.c **** 
 322:../ext_lib/tle94112el.c ****   uint8_t tx_data[2];
 323:../ext_lib/tle94112el.c ****   uint8_t rx_data[2];
 324:../ext_lib/tle94112el.c **** 
 325:../ext_lib/tle94112el.c ****   tx_data[0] = get_hbridge_act_address(hbridge);
 1251              	 .loc 1 325 0
 1252 001c FB78     	 ldrb r3,[r7,#3]
 1253 001e 1846     	 mov r0,r3
 1254 0020 FFF7FEFF 	 bl get_hbridge_act_address
 1255 0024 0346     	 mov r3,r0
 1256 0026 3B73     	 strb r3,[r7,#12]
 326:../ext_lib/tle94112el.c ****   tx_data[1] = 0xff;
 1257              	 .loc 1 326 0
 1258 0028 FF23     	 movs r3,#255
 1259 002a 7B73     	 strb r3,[r7,#13]
 327:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 1260              	 .loc 1 327 0
 1261 002c 7B68     	 ldr r3,[r7,#4]
 1262 002e 9B68     	 ldr r3,[r3,#8]
 1263 0030 07F10C01 	 add r1,r7,#12
 1264 0034 07F10802 	 add r2,r7,#8
 1265 0038 0846     	 mov r0,r1
 1266 003a 1146     	 mov r1,r2
 1267 003c 9847     	 blx r3
 328:../ext_lib/tle94112el.c **** 
 329:../ext_lib/tle94112el.c ****   tx_data[0] |= TLE94112EL_SPI_WRITE;
 1268              	 .loc 1 329 0
 1269 003e 3B7B     	 ldrb r3,[r7,#12]
 1270 0040 63F07F03 	 orn r3,r3,#127
 1271 0044 DBB2     	 uxtb r3,r3
 1272 0046 3B73     	 strb r3,[r7,#12]
 330:../ext_lib/tle94112el.c ****   tx_data[1] = (rx_data[1] & (uint8_t)~(TLE94112EL_HB_ACT_CTRL_HB_Msk << ((hbridge % 4) * TLE94112E
 1273              	 .loc 1 330 0
 1274 0048 7A7A     	 ldrb r2,[r7,#9]
 1275 004a FB78     	 ldrb r3,[r7,#3]
 1276 004c 03F00303 	 and r3,r3,#3
 1277 0050 5B00     	 lsls r3,r3,#1
 1278 0052 0321     	 movs r1,#3
 1279 0054 01FA03F3 	 lsl r3,r1,r3
 1280 0058 DBB2     	 uxtb r3,r3
 1281 005a DB43     	 mvns r3,r3
 1282 005c DBB2     	 uxtb r3,r3
 1283 005e 1340     	 ands r3,r3,r2
 1284 0060 DBB2     	 uxtb r3,r3
 1285 0062 D9B2     	 uxtb r1,r3
 331:../ext_lib/tle94112el.c **** 		       (output << ((hbridge % 4) * TLE94112EL_HB_ACT_CTRL_HB_Size));
 1286              	 .loc 1 331 0
 1287 0064 BA78     	 ldrb r2,[r7,#2]
 1288 0066 FB78     	 ldrb r3,[r7,#3]
 1289 0068 03F00303 	 and r3,r3,#3
 1290 006c 5B00     	 lsls r3,r3,#1
 1291 006e 02FA03F3 	 lsl r3,r2,r3
 330:../ext_lib/tle94112el.c ****   tx_data[1] = (rx_data[1] & (uint8_t)~(TLE94112EL_HB_ACT_CTRL_HB_Msk << ((hbridge % 4) * TLE94112E
 1292              	 .loc 1 330 0
 1293 0072 DBB2     	 uxtb r3,r3
 1294 0074 0A46     	 mov r2,r1
 1295 0076 1343     	 orrs r3,r3,r2
 1296 0078 DBB2     	 uxtb r3,r3
 1297 007a DBB2     	 uxtb r3,r3
 1298 007c 7B73     	 strb r3,[r7,#13]
 332:../ext_lib/tle94112el.c **** 
 333:../ext_lib/tle94112el.c ****   handler->spi_transfer(tx_data, rx_data);
 1299              	 .loc 1 333 0
 1300 007e 7B68     	 ldr r3,[r7,#4]
 1301 0080 9B68     	 ldr r3,[r3,#8]
 1302 0082 07F10C01 	 add r1,r7,#12
 1303 0086 07F10802 	 add r2,r7,#8
 1304 008a 0846     	 mov r0,r1
 1305 008c 1146     	 mov r1,r2
 1306 008e 9847     	 blx r3
 334:../ext_lib/tle94112el.c **** 
 335:../ext_lib/tle94112el.c ****   return rx_data[0];
 1307              	 .loc 1 335 0
 1308 0090 3B7A     	 ldrb r3,[r7,#8]
 1309              	.L71:
 336:../ext_lib/tle94112el.c **** }
 1310              	 .loc 1 336 0 discriminator 1
 1311 0092 1846     	 mov r0,r3
 1312 0094 1037     	 adds r7,r7,#16
 1313              	.LCFI88:
 1314              	 .cfi_def_cfa_offset 8
 1315 0096 BD46     	 mov sp,r7
 1316              	.LCFI89:
 1317              	 .cfi_def_cfa_register 13
 1318              	 
 1319 0098 80BD     	 pop {r7,pc}
 1320              	 .cfi_endproc
 1321              	.LFE16:
 1323 009a 00BF     	 .text
 1324              	.Letext0:
 1325              	 .file 2 "c:\\users\\forge-15r\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1326              	 .file 3 "c:\\users\\forge-15r\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1327              	 .file 4 "../ext_lib/tle94112el.h"
DEFINED SYMBOLS
                            *ABS*:00000000 tle94112el.c
    {standard input}:20     .text.get_pwm_channel_dc_address:00000000 $t
    {standard input}:24     .text.get_pwm_channel_dc_address:00000000 get_pwm_channel_dc_address
    {standard input}:85     .text.get_hbridge_mode_address:00000000 $t
    {standard input}:89     .text.get_hbridge_mode_address:00000000 get_hbridge_mode_address
    {standard input}:153    .text.get_hbridge_fw_address:00000000 $t
    {standard input}:157    .text.get_hbridge_fw_address:00000000 get_hbridge_fw_address
    {standard input}:213    .text.get_hbridge_act_address:00000000 $t
    {standard input}:217    .text.get_hbridge_act_address:00000000 get_hbridge_act_address
    {standard input}:281    .text.is_valid_diag_reg:00000000 $t
    {standard input}:285    .text.is_valid_diag_reg:00000000 is_valid_diag_reg
    {standard input}:365    .text.TLE94112EL_GetDeviceId:00000000 $t
    {standard input}:370    .text.TLE94112EL_GetDeviceId:00000000 TLE94112EL_GetDeviceId
    {standard input}:430    .text.TLE94112EL_GetStatus:00000000 $t
    {standard input}:435    .text.TLE94112EL_GetStatus:00000000 TLE94112EL_GetStatus
    {standard input}:509    .text.TLE94112EL_ClearStatus:00000000 $t
    {standard input}:514    .text.TLE94112EL_ClearStatus:00000000 TLE94112EL_ClearStatus
    {standard input}:580    .text.TLE94112EL_Enable:00000000 $t
    {standard input}:585    .text.TLE94112EL_Enable:00000000 TLE94112EL_Enable
    {standard input}:623    .text.TLE94112EL_Disable:00000000 $t
    {standard input}:628    .text.TLE94112EL_Disable:00000000 TLE94112EL_Disable
    {standard input}:666    .text.TLE94112EL_SetPwmFrequency:00000000 $t
    {standard input}:671    .text.TLE94112EL_SetPwmFrequency:00000000 TLE94112EL_SetPwmFrequency
    {standard input}:769    .text.TLE94112EL_SetPwmDutyCycle:00000000 $t
    {standard input}:774    .text.TLE94112EL_SetPwmDutyCycle:00000000 TLE94112EL_SetPwmDutyCycle
    {standard input}:840    .text.TLE94112EL_GetRegister:00000000 $t
    {standard input}:845    .text.TLE94112EL_GetRegister:00000000 TLE94112EL_GetRegister
    {standard input}:895    .text.TLE94112EL_SetRegister:00000000 $t
    {standard input}:900    .text.TLE94112EL_SetRegister:00000000 TLE94112EL_SetRegister
    {standard input}:981    .text.TLE94112EL_SetHBrigeMode:00000000 $t
    {standard input}:986    .text.TLE94112EL_SetHBrigeMode:00000000 TLE94112EL_SetHBrigeMode
    {standard input}:1089   .text.TLE94112EL_SetHBrigeFreeWheeling:00000000 $t
    {standard input}:1094   .text.TLE94112EL_SetHBrigeFreeWheeling:00000000 TLE94112EL_SetHBrigeFreeWheeling
    {standard input}:1211   .text.TLE94112EL_SetHBrigeFreeWheeling:000000b4 $d
    {standard input}:1216   .text.TLE94112EL_SetHBrigeOutput:00000000 $t
    {standard input}:1221   .text.TLE94112EL_SetHBrigeOutput:00000000 TLE94112EL_SetHBrigeOutput
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
