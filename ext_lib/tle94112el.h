/*********************************************************************************************************************
 * Copyright (c) 2018-2020, Infineon Technologies AG
 * All rights reserved.
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * To improve the quality of the software, users are encouraged to share
 * modifications, enhancements or bug fixes with Infineon Technologies AG
 * at XMCSupport@infineon.com.
 *********************************************************************************************************************/

#ifndef TLE94112EL_H
#define TLE94112EL_H

#include <stdint.h>
#include <stdbool.h>

#include "tle94112el_regs.h"

#define TLE94112EL_PWM_DC_CTRL_OFF  0x0
#define TLE94112EL_PWM_DC_CTRL_ON   0xff

/**
 *
 */
typedef enum TLE94112EL_PWM_CHANNEL
{
  TLE94112EL_PWM_CHANNEL_1,
  TLE94112EL_PWM_CHANNEL_2,
  TLE94112EL_PWM_CHANNEL_3,
  TLE94112EL_PWM_CHANNEL_MAX
} TLE94112EL_PWM_CHANNEL_t;

/**
 *
 */
typedef enum TLE94112EL_HBRIDGE
{
  TLE94112EL_HBRIDGE_1,
  TLE94112EL_HBRIDGE_2,
  TLE94112EL_HBRIDGE_3,
  TLE94112EL_HBRIDGE_4,
  TLE94112EL_HBRIDGE_5,
  TLE94112EL_HBRIDGE_6,
  TLE94112EL_HBRIDGE_7,
  TLE94112EL_HBRIDGE_8,
  TLE94112EL_HBRIDGE_9,
  TLE94112EL_HBRIDGE_10,
  TLE94112EL_HBRIDGE_11,
  TLE94112EL_HBRIDGE_12,
  TLE94112EL_HBRIDGE_MAX
} TLE94112EL_HBRIDGE_t;

/**
 *
 */
typedef enum TLE94112EL_PWM_FREQ
{
  TLE94112EL_PWM_FREQ_OFF,
  TLE94112EL_PWM_FREQ_80HZ,
  TLE94112EL_PWM_FREQ_100HZ,
  TLE94112EL_PWM_FREQ_200HZ
} TLE94112EL_PWM_FREQ_t;

/**
 *
 */
typedef enum TLE94112EL_HBRIDGE_MODE
{
  TLE94112EL_HBRIDGE_MODE_NO_PWM,
  TLE94112EL_HBRIDGE_MODE_PWM_CH1,
  TLE94112EL_HBRIDGE_MODE_PWM_CH2,
  TLE94112EL_HBRIDGE_MODE_PWM_CH3
} TLE94112EL_HBRIDGE_MODE_t;

/**
 *
 */
typedef enum TLE94112EL_HBRIDGE_OUTPUT
{
  TLE94112EL_HBRIDGE_OUTPUT_TRISTATE = 0x0,
  TLE94112EL_HBRIDGE_OUTPUT_LOW = 0x1,
  TLE94112EL_HBRIDGE_OUTPUT_HIGH = 0x2,
} TLE94112EL_HBRIDGE_OUTPUT_t;

/**
 *
 */
typedef struct TLE94112EL
{
  void (*enable)(void);
  void (*disable)(void);
  int32_t (*spi_transfer)(uint8_t *tx_data, uint8_t *rx_data);
} TLE94112EL_t;

/**********************************************************************************************************************
 * API PROTOTYPES
 *********************************************************************************************************************/

#ifdef __cplusplus
extern "C" {
#endif

/**
 *
 */
int32_t TLE94112EL_GetDeviceId(const TLE94112EL_t *const handler);

/**
 *
 */
int32_t TLE94112EL_GetStatus(const TLE94112EL_t *const handler, uint8_t addr);

/**
 *
 */
int32_t TLE94112EL_ClearStatus(const TLE94112EL_t *const handler, uint8_t addr);

/**
 *
 */
int32_t TLE94112EL_Enable(const TLE94112EL_t *const handler);

/**
 *
 */
int32_t TLE94112EL_Disable(const TLE94112EL_t *const handler);

/**
 *
 */
int32_t TLE94112EL_SetPwmFrequency(const TLE94112EL_t *const handler, TLE94112EL_PWM_CHANNEL_t channel, TLE94112EL_PWM_FREQ_t freq);

/**
 *
 */
int32_t TLE94112EL_SetPwmDutyCycle(const TLE94112EL_t *const handler, TLE94112EL_PWM_CHANNEL_t channel, uint8_t duty_cyle);

/**
 *
 */
int32_t TLE94112EL_SetHBrigeMode(const TLE94112EL_t *const handler, TLE94112EL_HBRIDGE_t hbridge, TLE94112EL_HBRIDGE_MODE_t mode);

/**
 *
 */
int32_t TLE94112EL_SetHBrigeFreeWheeling(const TLE94112EL_t *const handler, TLE94112EL_HBRIDGE_t hbridge, bool enable_free_wheeling);

/**
 *
 */
int32_t TLE94112EL_SetHBrigeOutput(const TLE94112EL_t *const handler, TLE94112EL_HBRIDGE_t hbridge, TLE94112EL_HBRIDGE_OUTPUT_t output);

/**
 *
 */
int32_t TLE94112EL_GetRegister(const TLE94112EL_t *const handler, uint8_t reg_addr);

/**
 *
 */
int32_t TLE94112EL_SetRegister(const TLE94112EL_t *const handler, uint8_t reg_addr, uint8_t reg_val, uint8_t reg_mask);

#ifdef __cplusplus
}
#endif

#endif
